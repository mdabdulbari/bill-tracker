{"version":3,"sources":["components/Header/index.js","components/Header/styles.js","components/ExpenseModal/styles.js","components/ExpenseModal/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","Toolbar","variant","Typography","color","styles","expenseSection","paddingTop","width","margin","modal","top","right","marginTop","modalBody","background","withStyles","props","useState","setAmount","setDescription","setDate","Modal","open","onClose","aria-labelledby","aria-describedby","className","classes","component","TextField","id","label","type","onChange","e","target","value","Divider","defaultValue","textField","InputLabelProps","shrink","Button","onClick","preventDefault","setOpen","root","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAYeA,EAVA,kBACX,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,cAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,SACI,cAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKE,MAAM,UAA/B,+BCGGC,EARA,CACXC,eAAgB,CACZC,WAAY,GACZC,MAAO,MACPC,OAAQ,S,wBCSDJ,EAbA,CACbK,MAAO,CACLC,IAAK,GACLC,MAAO,GACPC,UAAW,KAEbC,UAAW,CACTL,OAAQ,OACRD,MAAO,IACPO,WAAY,SCwEDC,cAAWX,EAAXW,EArEM,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBACfC,GADe,aAEQD,mBAAS,IAFjB,mBAEVE,GAFU,aAGNF,mBAAS,IAHH,mBAGjBG,GAHiB,WAqB9B,OACE,cAACC,EAAA,EAAD,CACEC,KAAMN,EAAMM,KACZC,QAAS,iBAAI,IACbC,kBAAgB,qBAChBC,mBAAiB,2BACjBC,UAAWV,EAAMW,QAAQlB,MAL3B,SAOE,sBAAKiB,UAAWV,EAAMW,QAAQd,UAA9B,UACE,cAACX,EAAA,EAAD,CAAYD,QAAQ,KAAK2B,UAAU,KAAnC,yBAGA,iCACE,cAACC,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,SACNC,KAAK,OACLC,SAjCa,SAACC,GACtBhB,EAAUgB,EAAEC,OAAOC,UAiCV,IACH,cAACC,EAAA,EAAD,IACA,cAACR,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,cACNC,KAAK,OACLC,SApCiB,SAACC,GAC1Bf,EAAee,EAAEC,OAAOC,UAqClB,cAACC,EAAA,EAAD,IACA,cAACR,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNC,KAAK,OACLM,aAAa,GACbZ,UAAWV,EAAMW,QAAQY,UACzBC,gBAAiB,CACfC,QAAQ,GAEVR,SA5CW,SAACC,GACpBd,EAAQc,EAAEC,OAAOC,UA6CX,cAACC,EAAA,EAAD,IACA,cAACK,EAAA,EAAD,CAAQzC,QAAQ,YAAYE,MAAM,YAAYwC,QA3CjC,SAACT,GACpBA,EAAEU,kBA0CI,+BC7CK7B,kBAAWX,EAAXW,EAnBf,SAAaC,GAAQ,IAAD,EACMC,oBAAS,GADf,mBACXK,EADW,KACLuB,EADK,KAElB,OACE,sBAAKnB,UAAWV,EAAMW,QAAQmB,KAA9B,UACE,cAAC,EAAD,IACA,0BAASpB,UAAWV,EAAMW,QAAQtB,eAAlC,UACE,cAACqC,EAAA,EAAD,CACEC,QAAS,kBAAME,GAAQ,IACvB1C,MAAM,YACNF,QAAQ,YAHV,yBAOA,cAAC,EAAD,CAAcqB,KAAMA,aCTbyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad38179e.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nconst Header = () => (\r\n    <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n            <Typography variant=\"h4\" color=\"inherit\">\r\n                Bill Tracker\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n);\r\n\r\nexport default Header;\r\n","const styles = {\r\n    expenseSection: {\r\n        paddingTop: 20,\r\n        width: \"60%\",\r\n        margin: \"auto\",\r\n    },\r\n};\r\n\r\nexport default styles;\r\n","const styles = {\r\n  modal: {\r\n    top: 50,\r\n    right: 50,\r\n    marginTop: 250,\r\n  },\r\n  modalBody: {\r\n    margin: \"auto\",\r\n    width: 600,\r\n    background: \"#fff\",\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import {\r\n  Button,\r\n  Modal,\r\n  withStyles,\r\n  TextField,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useState } from \"react\";\r\nimport styles from \"./styles\";\r\n\r\nconst ExpenseModal = (props) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const onChangeAmount = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const onChangeDescprtion = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const onChangeDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={()=>\"\"}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      className={props.classes.modal}\r\n    >\r\n      <div className={props.classes.modalBody}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Add Expense\r\n        </Typography>\r\n        <form>\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Amount\"\r\n            type=\"text\"\r\n            onChange={onChangeAmount}\r\n          />{\" \"}\r\n          <Divider />\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            label=\"Description\"\r\n            type=\"text\"\r\n            onChange={onChangeDescprtion}\r\n          />\r\n          <Divider />\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            defaultValue=\"\"\r\n            className={props.classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={onChangeDate}\r\n          />\r\n          <Divider />\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handelSubmit}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseModal);\r\n","import { Button, withStyles } from \"@material-ui/core\";\r\n\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport styles from \"./components/Header/styles\";\r\nimport ExpenseModal from \"./components/ExpenseModal\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App(props) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className={props.classes.root}>\r\n      <Header />\r\n      <section className={props.classes.expenseSection}>\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n        >\r\n          New Expense\r\n        </Button>\r\n        <ExpenseModal open={open} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}